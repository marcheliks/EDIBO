https://www3.ntu.edu.sg/home/ehchua/programming/sql/MySQL_Beginner.html
Commands
    SELECT          - extracts data from a database
    UPDATE          - updates data in a database
    DELETE          - deletes data from a database
    INSERT INTO     - inserts new data into a database
    CREATE DATABASE - creates a new database
    ALTER DATABASE  - modifies a database
    CREATE TABLE    - creates a new table
    ALTER TABLE     - modifies a table
    DROP TABLE      - deletes a table
    CREATE INDEX    - creates an index (search key)
    DROP INDEX      - deletes an index
    
    (INNER)       JOIN: Returns records that have matching values in both tables
    LEFT (OUTER)  JOIN: Returns all records from the left table, and the matched records from the right table
    RIGHT (OUTER) JOIN: Returns all records from the right table, and the matched records from the left table
    FULL (OUTER)  JOIN: Returns all records when there is a match in either left or right table


    
    = 	Equal 	
> 	Greater than 	
< 	Less than 	
>= 	Greater than or equal 	
<= 	Less than or equal 	
<> 	Not equal. Note: In some versions of SQL this operator may be written as != 	
BETWEEN 	Between a certain range 	
LIKE 	Search for a pattern 	
IN 	To specify multiple possible values for a column
* 	Represents zero or more characters                  |	bl* finds bl, black, blue, and blob
? 	Represents a single character 	                    | h?t finds hot, hat, and hit
[] 	Represents any single character within the brackets |	h[oa]t finds hot and hat, but not hit
! 	Represents any character not in the brackets        | h[!oa]t finds hit, but not hot and hat
- 	Represents a range of characters 	                  | c[a-b]t finds cat and cbt
# 	Represents any single numeric character             |	2#5 finds 205, 215, 225, 235, 245, 255, 265, 275, 285, and 295
% 	Represents zero or more characters                  |	bl% finds bl, black, blue, and blob
_ 	Represents a single character                       |	h_t finds hot, hat, and hit
[] 	Represents any single character within the brackets |	h[oa]t finds hot and hat, but not hit
^ 	Represents any character not in the brackets        |	h[^oa]t finds hit, but not hot and hat
- 	Represents a range of characters                    |	c[a-b]t finds cat and cbt
    
WHERE CustomerName LIKE 'a%'  	Finds any values that start with "a"
WHERE CustomerName LIKE '%a'  	Finds any values that end with "a"
WHERE CustomerName LIKE '%or%' 	Finds any values that have "or" in any position
WHERE CustomerName LIKE '_r%' 	Finds any values that have "r" in the second position
WHERE CustomerName LIKE 'a_%' 	Finds any values that start with "a" and are at least 2 characters in length
WHERE CustomerName LIKE 'a__%' 	Finds any values that start with "a" and are at least 3 characters in length
WHERE ContactName LIKE 'a%o' 	  Finds any values that start with "a" and ends with "o"
    
-- Database-Level

DROP DATABASE databaseName                 -- Delete the database (irrecoverable!)
DROP DATABASE IF EXISTS databaseName       -- Delete if it exists
CREATE DATABASE databaseName               -- Create a new database
CREATE DATABASE IF NOT EXISTS databaseName -- Create only if it does not exists
SHOW DATABASES                             -- Show all the databases in this server
USE databaseName                           -- Set the default (current) database
SELECT DATABASE()                          -- Show the default database
SHOW CREATE DATABASE databaseName          -- Show the CREATE DATABASE statement

 
-- Table-Level
DROP TABLE [IF EXISTS] tableName, ...
CREATE TABLE [IF NOT EXISTS] tableName (
   columnName columnType columnAttribute, ...
   PRIMARY KEY(columnName),
   FOREIGN KEY (columnNmae) REFERENCES tableName (columnNmae))


SHOW TABLES                -- Show all the tables in the default database
DESCRIBE|DESC tableName    -- Describe the details for a table
ALTER TABLE tableName ...  -- Modify a table, e.g., ADD COLUMN and DROP COLUMN
ALTER TABLE tableName ADD columnDefinition
ALTER TABLE tableName DROP columnName
ALTER TABLE tableName ADD FOREIGN KEY (columnNmae) REFERENCES tableName (columnNmae)
ALTER TABLE tableName DROP FOREIGN KEY constraintName
SHOW CREATE TABLE tableName        -- Show the CREATE TABLE statement for this tableName
 
-- Row-Level
INSERT INTO tableName 
   VALUES (column1Value, column2Value,...)               -- Insert on all Columns
INSERT INTO tableName 
   VALUES (column1Value, column2Value,...), ...          -- Insert multiple rows
INSERT INTO tableName (column1Name, ..., columnNName)
   VALUES (column1Value, ..., columnNValue)              -- Insert on selected Columns
DELETE FROM tableName WHERE criteria
UPDATE tableName SET columnName = expr, ... WHERE criteria
SELECT * | column1Name AS alias1, ..., columnNName AS aliasN 
   FROM tableName
   WHERE criteria
   GROUP BY columnName
   ORDER BY columnName ASC|DESC, ...
   HAVING groupConstraints
   LIMIT count | offset count
 
-- Others
SHOW WARNINGS;   -- Show the warnings of the previous statement
DB - datu bāze

1. DB -> SQL (MySQL)
DB serveris satur DB (DB nosaukumi servera ietvaros nedrīkst atkārtoties)
DB sastāv no tabulām (tabulu nosaukumi DB ietvaros nedrīkst atkārtoties)
Tabulas sastāv no kolonnām (kolonnu nosaukumi tabulu ietvaros nedrīkst atkārtoties)
Kolonnai ir nosaukums un datu tips
* Komentāra rinda (--), komentāra bloks (/* */)
1.0. DB struktūras izzināšana
1.0.1. aktīvs DB lietotājs - SELECT CURRENT_USER();
* lietotāja tiesības - SHOW GRANTS;
1.0.2. lietotāja tiesību noskaidrošana - SHOW GRANTS FOR 'user'@'localhost';
1.0.3. aktīva DB - SELECT DATABASE();
1.0.4. visas DB - SHOW DATABASES;
1.0.5. DB izvēle - USE DBNAME; (var pārbaudīt ar komandu no 1.0.3.)
* DB tiek izvēlēta līdz atslēgšanas brīdim vai citas DB USE sākumam
1.0.6. DB veidošana - CREATE DATABASE DBNAME;
1.0.7. DB dzēšana - DROP DATABASE DBNAME;
1.0.8. visas tabulas - SHOW TABLES;
1.0.9. tabulas struktūras apraksts - DESCRIBE TABLE_NAME; (SHOW COLUMNS FROM TABLE_NAME;)
1.0.10. tabulas detalizēts apraksts un statistika - SHOW TABLE STATUS FROM DBNAME;
* SELECT * FROM information_schema.KEY_COLUMN_USAGE WHERE TABLE_NAME='MyTBL_0';
** SHOW CREATE TABLE MyTBL_0;
1.0.11. tabulas ierakstu izgūšana - SELECT * FROM TABLE_NAME;
1.0.12. tabulas ierakstu izgūšana ar filtru - SELECT * FROM TABLE_NAME WHERE COLUMN_NAME=VALUE;
* filtrs var būt daudz līmeņu
1.0.13. tabulas veidošana - CREATE TABLE TABLE_NAME (COLUMN_NAME DATATYPE ...);
... - var būt vēl vairākas īpašības:
   NULL/NOT NULL
   DEFAULT
   PRIMARY KEY (ja tabulai tas ir, tad pirms pievienošanas sākumā ir jāpilda DROP PRIMARY KEY)
   AUTO_INCREMENT
   FOREIGN KEY
* CURRENT_TIMESTAMP()
1.0.14. tabulas struktūras modificēšana - ALTER TABLE TABLE_NAME ADD COLUMN_NAME DATATYPE ...;
* modificēšana - pielikt lauku, izmainīt lauka īpašības, dzēst lauku
** ALTER TABLE TABLE_NAME MODIFY COLUMN_NAME DATATYPE ...;
*** ALTER TABLE TABLE_NAME DROP COLUMN_NAME;
1.0.15. ierakstu pievienošana - INSERT INTO TABLE_NAME (COLUMN_NAME) VALUES (VALUE);
1.0.16. ierakstu rediģēšana - UPDATE TABLE_NAME SET COLUMN_NAME=VALUE WHERE COLUMN_NAME=VALUE;
1.0.17. ierakstu dzēšana - DELETE FROM TABLE_NAME WHERE COLUMN_NAME=VALUE;
1.0.18. trigeru saraksts - SHOW TRIGGERS;
1.0.19. trigera veidošana (trigera nosaukums ir unikāls visas datu bāzes ietvaros)
DELIMITER $$
CREATE TRIGGER TRIGGER_NAME BEFORE INSERT ON TABLE_NAME
FOR EACH ROW
BEGIN 
IF NEW.COLUMN_NAME=VALUE THEN
SIGNAL SQLSTATE '50000' SET message_text='MESSAGE_TEXT!';
END IF;
END;$$
DELIMITER ;
* SHOW TRIGGERS LIKE '%TRIGGER_NAME%' \G;
** https://www.w3resource.com/mysql/mysql-triggers.php
1.0.20. funkcijas veidošana


1.1. SQl online simulator
https://paiza.io
https://www.w3schools.com/sql/

1.2. SQL local DB (?)
1.2.1. Do we have local mysql tool
whereis mysql
1.2.2. Do we have local mysql service
ps aux | grep mysql (| utt. | utt.)
service mysql stop
service mysql start
mysql (slēdzas sistēmas lietotājs, var uzzināt ar whoami, pie localhost eq 127.0.0.1)
mysql -u user
mysql -u user -p
mysql -h 127.0.0.1 -u user -p

1.3. SQL AWS (Amazon Web Services)
* https://www.researchgate.net/post/Is_there_any_free_SQL_database_server_online

1.4. Darbs ar MySQL Workbench
1.4.0. shell:>mysql-workbench
1.4.1. DB struktūras izgūšana (Database -> Reverse Engineer)


2. .NET webapp ar konektoru uz DB
3. .NET webapp ar Angular (visādas grafiskās formas)
4. -"- ar konektoru uz DB
5. "Native" Angular
6. -"- (visādas grafiskās formas)
7. -"- ar konektoru uz DB
